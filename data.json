[
  {
    "question": "HTML",
    "questionID": "1",
    "category": "skill",
    "explanation": "簡単に言うと、人間の言語をコンピューターが理解できるようにマークアップする言語です。",
    "answerList": {
      "body": "マークアップをすることができる言語",
      "check": true
    }
  },
  {
    "question": "CSS",
    "questionID": "2",
    "category": "skill",
    "explanation": "htmlで作られた文章構造に、色やフォントなどの指定をし、デザインをする言語です。フロンドエンドエンジニアに、必須の言語になります。",
    "answerList": {
      "body": "スタイルシート言語",
      "check": true
    }
  },
  {
    "question": "JavaScript",
    "questionID": "3",
    "category": "skill",
    "explanation": "htmlで作られた文章構造に、色やフォントなどの指定をし、デザインをする言語です。フロンドエンドエンジニアに、必須の言語になります。",
    "answerList": {
      "body": "ブラウザ上で動くために開発されたプログラミング言語",
      "check": true
    }
  },
  {
    "question": "jQuery",
    "questionID": "4",
    "category": "skill",
    "explanation": "jQueryはJavaScriptのライブラリです。jQueryを使用することによって、よりシンプルにJavaScriptを記述することができます。つまり、より効率的にフロンドエンド開発を行えるようになります。",
    "answerList": {
      "body": "JavaScriptのライブラリ",
      "check": true
    }
  },
  {
    "question": "Ruby",
    "questionID": "5",
    "category": "skill",
    "explanation": "Rubyは、文法がわかりやすく、シンプルなコードで記述することができる言語です。Rubyはweb開発で使われることが多く、主にサーバーサイド側で使われることが多いです。また、Ruby",
    "answerList": {
      "body": "日本で開発された、オブジェクト指向のプログラミング言語",
      "check": true
    }
  },
  {
    "question": "Ruby on Rails",
    "questionID": "6",
    "category": "skill",
    "explanation": "RailsはRubyのフレームワークです。また、web開発向けのフレームワークとして設計されているため、Webアプリケーションを作るのに適しています。アプリを作るために必要な機能や構造が一つにまとまっているため、とても効率よく開発することができます。",
    "answerList": {
      "body": "Rubyのフレームワーク",
      "check": true
    }
  },
  {
    "question": "PHP",
    "questionID": "7",
    "category": "skill",
    "explanation": "PHPの特徴として、htmlに埋め込んで記述することができるという点が挙げられます。そのため、web開発で使われることが多いです。また、構文がわかりやすくシンプルと言う特異もあります。",
    "answerList": {
      "body": "Web開発でよく使用されるサーバーサイド言語",
      "check": true
    }
  },
  {
    "question": "Laravel",
    "questionID": "8",
    "category": "skill",
    "explanation": "Laravelは、PHPのフレームワークの中で最も人気のあるフレームワークとなっています。また、他のフレームワークに比べて、とても使いやすいものとされていて、初心者の人でも簡単に学ぶことができます。",
    "answerList": {
      "body": "PHPのフレームワーク",
      "check": true
    }
  },
  {
    "question": "Java",
    "questionID": "9",
    "category": "skill",
    "explanation": "Javaは、OSに依存せず、どんな環境でも動かすことができるサーバーサイド言語です。どんな環境でも使うことができるため、さまざまな現場で使われています。",
    "answerList": {
      "body": "OSに依存しないサーバーサイド言語",
      "check": true
    }
  },
  {
    "question": "Python",
    "questionID": "10",
    "category": "skill",
    "explanation": "Pythonはシンプルながらも汎用性が高い言語として知られています。そのため、多くの分野で使用されていて、特に人工知能開発で使われています。シンプルな記述で書くことができるため、勉強しやすく、初心者におすすめな言語です。",
    "answerList": {
      "body": "少ないコードで書くことのできるプログラミング言語",
      "check": true
    }
  },
  {
    "question": "Git",
    "questionID": "11",
    "category": "skill",
    "explanation": "Gitは、コードの編集履歴を、記録したり、追跡したりするバージョン管理システムです。チーム開発をする際に必ずと言っていいほど使われており、エンジニアにとって必須の知識になります。",
    "answerList": {
      "body": "バージョン管理システム",
      "check": true
    }
  },
  {
    "question": "SQL",
    "questionID": "12",
    "category": "skill",
    "explanation": "SQLは、データベースを操作するための言語です。SQLを使うことによって、データを追加したり、削除したり、検索したりするなど、様々なことが効率よく作業できるようになります。",
    "answerList": {
      "body": "データベースを操作するための言語",
      "check": true
    }
  },
  {
    "question": "Sass",
    "questionID": "13",
    "category": "skill",
    "explanation": "Sassはcssを拡張して、より効率よく書けるようにした言語です。Sassを使うことメリットとして、作業効率が上がったり、メンテナンス性が上がったりすることが挙げられます。",
    "answerList": {
      "body": "cssを拡張して書きやすくしたスタイルシート",
      "check": true
    }
  },
  {
    "question": "Go",
    "questionID": "14",
    "category": "skill",
    "explanation": "Goは、Googleによって開発された、オープンソースのプログラミング言語です。Goを使うことよって、シンプルで信頼性の高い効率的なソフトウェアを構築することができます。また、比較的簡単な記述でコーディングすることができます。",
    "answerList": {
      "body": "2009年にGoogleが開発したプログラミング言語",
      "check": true
    }
  },
  {
    "question": "Node.js",
    "questionID": "15",
    "category": "skill",
    "explanation": "jsはサーバーサイドで動くJavaScriptです。JavaScriptはブラウザで動作するプログラミング言語のため、主に、クライアント側で使われることが多かったですが、Node.jsを使うことによって、サーバーサイドもJavaScriptで書くことができます。",
    "answerList": {
      "body": "サーバーサイドでも動くJavaScript",
      "check": true
    }
  },
  {
    "question": "Unity",
    "questionID": "16",
    "category": "skill",
    "explanation": "Unityはゲーム開発の際に使われるライブラリや素材などの機能をまとめて提供してくれています。そのため、Unityを使うことによって簡単にゲーム開発をすることができます。",
    "answerList": {
      "body": "ゲームを開発するためによく使用する機能を一つにまとめたゲームエンジン",
      "check": true
    }
  },
  {
    "question": "MySQL",
    "questionID": "17",
    "category": "skill",
    "explanation": "MySQLは、多くの企業が利用しているデータベース管理システムです。MySQLを学ぶことによって、データベースの連携や、データの操作方法をしっかり学ぶことができます。",
    "answerList": {
      "body": "データベース管理システム",
      "check": true
    }
  },
  {
    "question": "TypeScript",
    "questionID": "18",
    "category": "skill",
    "explanation": "TypeScriptは、マイクロソフト社が開発した、JavaScriptを拡張したオープンソースのプログラミング言語です。JavaScriptは動的型付け言語ですが、TypeScriptは静的型付け言語であると言う違いがあります。",
    "answerList": {
      "body": "JavaScriptを拡張して作られたプログラミング言語",
      "check": true
    }
  },
  {
    "question": "React",
    "questionID": "19",
    "category": "skill",
    "explanation": "Reactとは、Facebook社が開発したUIパーツを作るためのJavaScripのライブラリです。Facebook社が開発したと言うこともあり、改良が早く、品質も高く、人気なライブラリとなっています。また、ReactNativeを使うことによって、スマホアプリの開発を行うこともできます。",
    "answerList": {
      "body": "JavaScriptのライブラリ",
      "check": true
    }
  },
  {
    "question": "リモートリポジトリ",
    "questionID": "20",
    "category": "git",
    "explanation": "リモートリポジトリを使うことによって、複数人で作業することができるようになります。チーム開発の際は、基本的に、ローカルで編集したものを、リモートリポジトリにアップして開発していく流れになります。",
    "answerList": {
      "body": "サーバーにあるリポジトリ",
      "check": true
    }
  },
  {
    "question": "ローカルリポジトリ",
    "questionID": "21",
    "category": "git",
    "explanation": "ファイルを編集する際は、基本的に、ローカルリポジトリを編集します。そして、その変更内容をリモートリポジトリにアップして、チーム開発を進めていく形になります。",
    "answerList": {
      "body": "自分のPCにあるリポジトリ",
      "check": true
    }
  },
  {
    "question": "コミット",
    "questionID": "23",
    "category": "git",
    "explanation": "コミットをすることによって編集したファイルやディレクトリをリポジトリに記録することができます。",

    "answerList": {
      "body": "ファイルやディレクトリの変更をリポジトリに記録する",
      "check": true
    }
  },
  {
    "question": "プッシュ",
    "questionID": "24",
    "category": "git",
    "explanation": "プッシュをすることによってローカルリポジトリの変更内容をリモートリポジトリに上げることができ、他のチームの人と作業を共有することができます。",

    "answerList": {
      "body": "ローカルリポジトリの内容をリモートリポジトリにアップすること。",
      "check": true
    }
  },
  {
    "question": "ブランチ",
    "questionID": "25",
    "category": "git",
    "explanation": "分岐したブランチは他のブランチの影響受けないため同じリポジトリの中で複数の変更を同時に行うことができます。チーム開発の際は、基本的にブランチを作成して開発をすることになります。",
    "answerList": {
      "body": "変更を分岐して記録し、他人と同時に開発をするためのもの",
      "check": true
    }
  },
  {
    "question": "プルリクエスト",
    "questionID": "26",
    "category": "git",
    "explanation": "プルリクエスト機能を利用することによって、マージをする前に、コードに問題がないか確認をすることができます。",
    "answerList": {
      "body": "変更したコードをリポジトリに取り込む前にレビューを頼むことができる機能",
      "check": true
    }
  },
  {
    "question": "git clone <リポジトリ名>",
    "questionID": "28",
    "category": "git",
    "explanation": "git cloneをすることによって、リモートリポジトリにあるコードを自分の環境に反映させることができます。",
    "answerList": {
      "body": "リポジトリのコピーを作成する",
      "check": true
    }
  },
  {
    "question": "git fetch",
    "questionID": "29",
    "category": "git",
    "explanation": "git fetch行うと最新のリモートリポジトリの変更のみを確認することができます。ローカルリポジトリに反映しないので、リモートリポジトリの変更の確認をしたい時だけに使います。",

    "answerList": {
      "body": "リモートから情報をとってくる（マージはしない）",
      "check": true
    }
  },
  {
    "question": "git pull",
    "questionID": "30",
    "category": "git",
    "explanation": "git pullを行うと最新のリモートリポジトリの変更を確認し自分のローカルリポジトリにマージをすることができます。",

    "answerList": {
      "body": "リモートから情報をとってくる（マージもする）",
      "check": true
    }
  },
  {
    "question": "git branch <ブランチ名>",
    "questionID": "31",
    "category": "git",
    "explanation": "git branch <ブランチ名>のコマンドで新しくブランチを作成することができます。ちなみにブランチを作成することをブランチを切るといいます。",

    "answerList": {
      "body": "ブランチを新規追加する",
      "check": true
    }
  },
  {
    "question": "git branch",
    "questionID": "32",
    "category": "git",
    "explanation": "このコマンドでブランチの一覧を表示することができます。",

    "answerList": {
      "body": "ブランチの一覧を表示する",
      "check": true
    }
  },
  {
    "question": "git checkout <既存ブランチ>",
    "questionID": "33",
    "category": "git",
    "explanation": "このコマンドでブランチを切り替えることができます。",

    "answerList": {
      "body": "ブランチを切り替える",
      "check": true
    }
  },
  {
    "question": "git checkout -b <既存ブランチ>",
    "questionID": "34",
    "category": "git",
    "explanation": "このコマンドでブランチを新規作成してそのブランチに切り替えることができます。",

    "answerList": {
      "body": "ブランチを新規作成して、そのブランチに切り替える。",
      "check": true
    }
  },
  {
    "question": "git merge <ブランチ名>",
    "questionID": "35",
    "category": "git",
    "explanation": "このコマンドでリモートリポジトリの内容をローカルリポジトリに反映させることができます。",

    "answerList": {
      "body": "変更を取り込む",
      "check": true
    }
  },
  {
    "question": "git branch -m <ブランチ名>",
    "questionID": "36",
    "category": "git",
    "explanation": "このコマンドでブランチ名を変更することができます。",

    "answerList": {
      "body": "ブランチ名を変更する",
      "check": true
    }
  },
  {
    "question": "git branch -d <ブランチ名>",
    "questionID": "37",
    "category": "git",
    "explanation": "このコマンドでブランチを削除することができます。",

    "answerList": {
      "body": "ブランチを削除する",
      "check": true
    }
  },
  {
    "question": "git stash",
    "questionID": "38",
    "category": "git",
    "explanation": "このコマンドでローカルリポジトリで変更していた作業を一旦退避させることができます。一旦作業を中断させ別のブランチで作業したい時などに利用します。",

    "answerList": {
      "body": "作業した変更分を一時的に退避させる",
      "check": true
    }
  },
  {
    "question": "git stash list",
    "questionID": "39",
    "category": "git",
    "explanation": "このコマンドで今一時的に退避させている分を確認することができます。",

    "answerList": {
      "body": "退避させた変更分を確認する",
      "check": true
    }
  },
  {
    "question": "git stash apply stash@{listで表示される番号}",
    "questionID": "40",
    "category": "git",
    "explanation": "このコマンドで一時的に退避させていた変更を復元させることができます。ちなみにこのコマンドではその変更分は削除されません。(stash listに残ったまま)",

    "answerList": {
      "body": "特定の作業を復元させる",
      "check": true
    }
  },
  {
    "question": "git stash drop stash@{listで表示される番号}",
    "questionID": "41",
    "category": "git",
    "explanation": "このコマンドで一時的に再生していた作業をリストから削除することができます。",

    "answerList": {
      "body": "退避した作業を削除する",
      "check": true
    }
  },
  {
    "question": "git stash pop stash@{listで表示される番号}",
    "questionID": "42",
    "category": "git",
    "explanation": "このコマンドで一時的に退避させていた変更を復元させることができます。そしてその変更をしたものをリストから削除します。",

    "answerList": {
      "body": "退避した作業を復元し、その作業を削除する",
      "check": true
    }
  },
  {
    "question": "フロントエンドエンジニア",
    "questionID": "43",
    "category": "work",
    "explanation": "フロントエンドとは、ユーザーが直接操作する場所を指します。つまり、フロンドエンドエンジニアとは、フロント部分を開発するエンジニアになります。基本的な仕事内容は、デザイナーが設計したデザインをもとに、それをコーディングするという内容になります。",
    "answerList": {
      "body": "ユーザーが直接操作する場所を設計・構築・実装をするエンジニア",
      "check": true
    }
  },
  {
    "question": "サーバーサイドエンジニア",
    "questionID": "44",
    "category": "work",
    "explanation": "サーバーサイドエンジニアは、サーバーサイド、つまり、サーバー側で行う処理に対して必要なプログラムの開発や、サーバーで扱うデータの管理を行うエンジニアのことを指します。使用するプログラミング言語はJava/C/C#/PHP/Python/Ruby/JavaScriptなどがあげられます。",
    "answerList": {
      "body": "サーバー側で動作するものを実装するエンジニア",
      "check": true
    }
  },
  {
    "question": "システムエンジニア",
    "questionID": "45",
    "category": "work",
    "explanation": "システムエンジニアの主な仕事内容は、クライアントにヒアリングを行い、その要求に最適なシステム開発の仕様書を作るという内容です。クライアントの目的をしっかり把握し、それを実現できるような仕様書を制作することが大事になってきます。",
    "answerList": {
      "body": "システム設計や保守や運用をするエンジニア",
      "check": true
    }
  },
  {
    "question": "インフラエンジニア",
    "questionID": "46",
    "category": "work",
    "explanation": "インフラエンジニアの仕事内容は、サーバー側のユーザーが触らない部分を設計や、構築や、運用をしていく仕事になります。求められる知識は、サーバーやネットワークの知識、クラウドの知識、セキュリティの知識などが挙げられます。",
    "answerList": {
      "body": "サーバーやネットワークなどのインフラを担当するエンジニア",
      "check": true
    }
  },
  {
    "question": "SRE",
    "questionID": "47",
    "category": "work",
    "explanation": "SREの目的は、サービスやプロダクトの信頼性の向上と、システムの運用作業を自動化し、企業の課題を解決するという目的があります。仕事内容として、システムやクラウドなどの開発や運用などが挙げられます。SREに求められるスキルは、サーバーの構築・運用技術、Webアプリ開発・運用技術、セキュリティ知識などが挙げられます。",
    "answerList": {
      "body": "サービスの運用や保守を担当するエンジニア",
      "check": true
    }
  },
  {
    "question": "SIer",
    "questionID": "48",
    "category": "work",
    "explanation": "SIerは、顧客の要望に応じて様々な仕事を担当します。そのため、システム開発に関わるほぼ全ての仕事を請け負うことになります。必要なスキルは、システムに関するスキル、プロジェクトマネジメントスキルなどが挙げられます。SIerは、プログラミングに関する知識だけでなく、スケジュール管理や、予算管理や、品質管理など様々な管理をしないといけません。",
    "answerList": {
      "body": "顧客が求めるシステムを構築・導入・運用する職業",
      "check": true
    }
  },
  {
    "question": "モバイルエンジニア",
    "questionID": "49",
    "category": "work",
    "explanation": "モバイルエンジニアの仕事内容は、スマートフォン向けのアプリケーションを開発することです。現在、モバイルアプリ市場が拡大しているということもあり、モバイルエンジニアの需要も高まっています。必要な言語は、AndroidはJava、Kotlinで、iOSはSwiftなどが挙げられます。",
    "answerList": {
      "body": "スマホのネイティブアプリを作るエンジニア",
      "check": true
    }
  },
  {
    "question": "機械学習エンジニア",
    "questionID": "50",
    "category": "work",
    "explanation": "機械学習エンジニアの仕事内容は、人工知能を利用したサービスの開発や、データの分析・解析などが挙げられます。必要な言語は、Python、R、C＋＋などです。",
    "answerList": {
      "body": "aiエンジニアの中で機械学習に携わるエンジニア",
      "check": true
    }
  },
  {
    "question": "フルスタックエンジニア",
    "questionID": "51",
    "category": "work",
    "explanation": "フルスタックエンジニアの仕事内容は、設計や開発、運用まで非常に多岐にわたります。そのため、一つの分野に精通するのではなく、複数の分野に詳しくなる必要があります。フルスタックエンジニアになるためには、スキルアップを欠かさず行う必要があります。",
    "answerList": {
      "body": "設計から開発、保守まで全て一人でできるひと",
      "check": true
    }
  },
  {
    "question": "エンジニアリングマネージャー",
    "questionID": "52",
    "category": "work",
    "explanation": "エンジニアリングマネージャーの業務内容は、採用や、プロダクトや開発の課題調整や、メンバーの評価などが挙げられます。人との関わりが多くなる職業なので、ピープルマネジメントや、プロダクトマネジメントや、プロジェクトマネジメントのスキルが求められます。",
    "answerList": {
      "body": "エンジニアのマネジメント、ヒューマンマネジメント",
      "check": true
    }
  },
  {
    "question": "テックリード",
    "questionID": "53",
    "category": "work",
    "explanation": "テックリードは、チーム内の技術リーダーなので、チームが書くコードの品質を担保するための指示を行ったりします。また、エンジニアリングの生産性を上げるためのサポートする仕事もあります。テックリードになるためには、少なくともチームを引っ張っていけるほどの技術力が必要ななります。",
    "answerList": {
      "body": "エンジニアの技術面のリーダー",
      "check": true
    }
  },
  {
    "question": "CTO",
    "questionID": "54",
    "category": "work",
    "explanation": "CTOの仕事内容は、経営陣の一人として、技術的なものや、経営戦略の意思決定を行ったりします。また、エンジニア採用や育成などに関わることもあります。CTOになるためには、高い技術力とともに、経営知識も求められ、また、会社全体を動かすマネジメント力やリーダーシップが必要になります。",
    "answerList": {
      "body": "会社の最高技術責任者",
      "check": true
    }
  },
  {
    "question": "HTTP",
    "questionID": "55",
    "category": "network",
    "explanation": "HTTPとは、サーバーとブラウザ間で、Web情報をやり取りするためのプロトコルです。基本的に動作がシンプルで、クライアントが要求を出し、サーバーが応答するというものです。",
    "answerList": {
      "body": "データを通信するときのプロトコル",
      "check": true
    }
  },
  {
    "question": "HTTPS",
    "questionID": "56",
    "category": "network",
    "explanation": "HTTPSは、Webのデータ転送に使われているHTTPを、暗号化したものです。暗号化することで、通信中の盗聴やなりすましを防ぐことができます。",
    "answerList": {
      "body": "通信内容が暗号化されたHTTP",
      "check": true
    }
  },
  {
    "question": "FTP",
    "questionID": "57",
    "category": "network",
    "explanation": "FTPを使用して、サーバーにアップされたファイルの一覧を見たり、アップロードやダウンロード、バックアップを行ったり、データの操作を行ったりすることができます。",
    "answerList": {
      "body": "ファイルを送受信するときのプロトコル",
      "check": true
    }
  },
  {
    "question": "SSL",
    "questionID": "58",
    "category": "network",
    "explanation": "インターネット上では、頻繁にプライバシーに関わるデータの通信が数多く行われていますが、そのデータをSSLによって、悪意ある第三者による盗聴や情報の改竄を防ぐことができます。",
    "answerList": {
      "body": "データの通信を暗号化し、送受信させる仕組み",
      "check": true
    }
  },
  {
    "question": "SSH",
    "questionID": "59",
    "category": "network",
    "explanation": "SSHを使うことによって、サーバーなどの操作する人から離れた場所にあるものと、安全にインターネット経由で接続することができるようになります。ネットワーク上の通信が全て暗号化されるため、安全に通信することができます。",
    "answerList": {
      "body": "リモートコンピュータと通信するためのプロトコル",
      "check": true
    }
  },
  {
    "question": "TCP",
    "questionID": "60",
    "category": "network",
    "explanation": "TCPの通信は、送ったデータが相手に届いたかどうかを、確認しながら通信する方法で、信頼性が高く、確実性もあるが、速度が遅いといったデメリットがある。",
    "answerList": {
      "body": "確実性を持った通信を行歌目のプロトコル",
      "check": true
    }
  },
  {
    "question": "ポート番号",
    "questionID": "61",
    "category": "network",
    "explanation": "ポート番号とは、インターネットで使用されるTCP/IP通信において、プログラムを識別するための番号です。IPアドレスを住所と例えると、ポート番号は、扉に例えられます。つまり、ポート番号は、ネットワークでデータを通信するための扉のようなものです。",
    "answerList": {
      "body": "コンピューターが通信に使用する出入り口の番号",
      "check": true
    }
  },
  {
    "question": "ファイアオール",
    "questionID": "62",
    "category": "network",
    "explanation": "ファイアウォールは、内部ネットワークをインターネットなどを通じて侵入してくる不正なアクセスから守るための仕組みです。",
    "answerList": {
      "body": "外部からの不正なアクセスを防ぐシステム",
      "check": true
    }
  },
  {
    "question": "IPアドレス",
    "questionID": "63",
    "category": "network",
    "explanation": "IPアドレスは、ネットワーク上の機器を識別するために割り当てられていて、インターネット上での住所のような役割を担っています。主に、ネットワーク上でデータを送受信する際に通信相手を使用するために使われています。",
    "answerList": {
      "body": "インターネット上に接続された機器が持つナンバー",
      "check": true
    }
  },
  {
    "question": "ドメイン",
    "questionID": "64",
    "category": "network",
    "explanation": "例えば、「https//example.com」というURLがあった場合、「example.com」の部分がドメインとなります。",
    "answerList": {
      "body": "インターネット上における住所",
      "check": true
    }
  },
  {
    "question": "DNS",
    "questionID": "65",
    "category": "network",
    "explanation": "ドメイン名は、人間にわかりやすいインターネット上における住所で、IPアドレスは、コンピューター向けのネットワーク上の住所です。DNSは、その二つを関連づけ、IPアドレスをドメインで使用できるようにすることができます。",
    "answerList": {
      "body": "ドメイン名とIPアドレスを関連づける仕組み",
      "check": true
    }
  },
  {
    "question": "VPN",
    "questionID": "66",
    "category": "network",
    "explanation": "VPNは、一定の通信品質を確保しつつ、通信傍受や盗聴のリスクを避けることができる技術です。インターネット上に仮想のトンネルを設置し、特定の人のみが通信を行うことができます。",
    "answerList": {
      "body": "ネットを使用している利用者間に、仮想的なプライベートネットワークを構築し、セキュリティを確保して通信を行う技術",
      "check": true
    }
  },
  {
    "question": "プロキシサーバー",
    "questionID": "67",
    "category": "network",
    "explanation": "コンピューターの代わりに、インターネットに接続し、サイトへのアクセスなどを行うサーバーのことを指します。コンピューターのインターネットへのアクセスをプロキシサーバー経由に限定することによって、不正アクセスを防いだり、特定のWEBサイトへのアクセスを禁止したりできます。",
    "answerList": {
      "body": "内部と外部のネットワークの中継をするサーバー",
      "check": true
    }
  },
  {
    "question": "OS",
    "questionID": "68",
    "category": "network",
    "explanation": "OSは、システム全体を管理し、様々なアプリケーションを動かす最も基本的なソフトウェアです。そのため、OSによって使えるアプリケーションも変わってきます。パソコン向けの代表的なOSとして、Windows、macOS、Linuxなどが挙げられます。",
    "answerList": {
      "body": "コンピューターの土台となるソフトウェア",
      "check": true
    }
  },
  {
    "question": "ハードウェア",
    "questionID": "69",
    "category": "network",
    "explanation": "ハードウェアとは、パソコンの本体そのものや、キーボード、マウスなど物理的なパーツのことを指します。",
    "answerList": {
      "body": "パソコンにおける目に見える形のある部分",
      "check": true
    }
  },
  {
    "question": "ソフトウェア",
    "questionID": "70",
    "category": "network",
    "explanation": "ソフトウェアとは、コンピューターを動作させるためのデータのまとまりです。種類として、OSとアプリケーション・ソフトに二つに分けることができます。",
    "answerList": {
      "body": "パソコンにおける目に見えない部分",
      "check": true
    }
  }
]
